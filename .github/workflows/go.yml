name: CI

on:
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    branches:
      - 'main'
    paths:
      - "**/*.go"
      - ".github/workflows/go.yml"

jobs:
  unit_tests:
    name: "Unit tests"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ^1.22

      - name: Run Tests with Coverage (Allow Failures)
        run: |
          go test -cover -coverprofile=coverage.txt -json ./... ./testdata > test-results.json || echo "TESTS_FAILED=true" >> $GITHUB_ENV

      - name: Archive Code Coverage Results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage
          path: coverage.txt

      - name: Archive Test Results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results.json

  code_coverage:
    name: "Code Coverage Report"
    runs-on: ubuntu-latest
    needs: unit_tests
    if: always()
    permissions:
      contents: read
      actions: read
      pull-requests: write
    steps:
      - name: Generate and Post Coverage Report
        uses: fgrosse/go-coverage-report@v1.1.1
        with:
          coverage-artifact-name: "code-coverage"
          coverage-file-name: "coverage.txt"

  test_summary:
    name: "Test Summary"
    runs-on: ubuntu-latest
    needs: unit_tests
    if: always()
    permissions:
      pull-requests: write
    steps:
      - name: Download Test Results
        uses: actions/download-artifact@v4
        with:
          name: test-results
          path: .

      - name: Extract Test Summary
        run: |
          PASSED=$(jq '[. | select(.Action=="pass")] | length' test-results.json)
          FAILED=$(jq '[. | select(.Action=="fail")] | length' test-results.json)
          echo "PASSED_TESTS=$PASSED" >> $GITHUB_ENV
          echo "FAILED_TESTS=$FAILED" >> $GITHUB_ENV

      - name: Output Summary for Pushes
        if: github.event_name == 'push'
        run: |
          echo "✅ **Test Summary**" >> $GITHUB_STEP_SUMMARY
          echo "- Passed: ${{ env.PASSED_TESTS }}" >> $GITHUB_STEP_SUMMARY
          echo "- Failed: ${{ env.FAILED_TESTS }}" >> $GITHUB_STEP_SUMMARY

      - name: Post Test Summary as PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          message: |
            ✅ **Test Summary**
            - Passed: ${{ env.PASSED_TESTS }}
            - Failed: ${{ env.FAILED_TESTS }}

      - name: Fail Workflow if Tests Failed
        if: env.TESTS_FAILED == 'true'
        run: exit 1
